# -*- coding: utf-8 -*-
"""
Created on Wed Dec 11 13:40:29 2019

@author: Dell
"""
import math
import tkinter as tk
from tkinter import * #*importar todas las clases
import numpy as np
import matplotlib
matplotlib.use("TkAgg")
from matplotlib.figure import Figure
from matplotlib.backends.backend_tkagg import FigureCanvasTkAgg
import pylab as plt



def Generar():
    tmin=0
    tmax=0.05
    t=np.linspace(tmin, tmax, 200)
    #t=np.arange(0,0.5,1/400)
    A=float(amplitud.get())
    F=float(frecuencia.get())
    fa=float(fase.get())
    #mues=float(muestra.get())
    funcion.set(amplitud.get()+"cos(2*π*"+frecuencia.get()+"t+"+fase.get()+")")  
    x1=A*np.cos(2*np.pi*F*t + fa)
    f=Figure(figsize=(3,3),dpi=100)
    img=f.add_subplot(111)
    img.plot(x1,'b')
    canvas=FigureCanvasTkAgg(f,ventana) 
    canvas.draw() #grafico el camvas
    #canvas.get_tk_widget().pack(side=tk.LEFT,padx=1,pady=1,ipadx=5,ipady=5)
    canvas.get_tk_widget().place(x=50,y=400)
    #amplitud.set("")
    #frecuencia.set("")
    #fase.set("")
    
    #muestra.set("")
###Muestreo####
    Ts=float(fs.get())
    T=1/(Ts*F)
    Nmin=np.ceil(tmin/T)
    Nmax=np.floor(tmax/T)
    n=np.arange(Nmin,Nmax)
    g=Figure(figsize=(5,5), dpi=50)
    img=g.add_subplot(111)
    x2=A*np.cos(2*np.pi*F*n*T+fa)
    img.plot(n*T,x2)
    img.plot(n*T,x2,'r*')
    canvas=FigureCanvasTkAgg(g,ventana)
    canvas.draw()
    #canvas.get_tk_widget().pack(side=tk.LEFT,padx=1,pady=1,ipadx=5,ipady=5)
    canvas.get_tk_widget().place(x=1000, y=400)
    fs.set("")
    
    
    
def compleja():
    f1=int(frecuencia.get())
    f2=float(frec2.get())
    A1=int(amplitud.get())
    A2=float(amp2.get())
    Fa1=int(fase.get())
    Fa2=float(fase2.get())
    if(f1>f2):
        min1=f1
    else:
        min1=f2
    while(1):
        if(min1%f1==0 and min1%f2==0):
            break
        min1 = min1+1
    fcm=min1
    tmin=0
    tmax=0.2
    t=np.linspace(tmin,tmax,400)
#definir la señal
    xa=(A1*np.cos(2*np.pi*f1*t)+Fa1)+(A2*np.cos(2*np.pi*f2*t)+Fa2)
#graficar la señal
    f2=Figure(figsize=(3,3),dpi=100)
    imga=f2.add_subplot(111)
    imga.plot(xa,'b')
    canvas=FigureCanvasTkAgg(f2,ventana) 
    canvas.draw() #grafico el camvas
    #canvas.get_tk_widget().pack(side=tk.LEFT,padx=1,pady=1,ipadx=5,ipady=5)
    canvas.get_tk_widget().place(x=400,y=400)
    amplitud.set("")
    frecuencia.set("")
    fase.set("")
    frec2.set("")
    amp2.set("")
    fase2.set("")
    
#muestreo de la señal
#periodo del muestreo
    T=1/(2*fcm)
#tiempos de la grafica
    nmin=np.ceil(tmin/T)
    nmax=np.floor(tmax/T)
#muestras de la señal
    n=np.arange(nmin,nmax)
#señal de muestreo
    g1=Figure(figsize=(3,3), dpi=50)
    imga=g1.add_subplot(212)
    xa2=(A1*np.cos(2*np.pi*f1*n*T)+Fa1)+(A2*np.cos(2*np.pi*f2*n*T)+Fa2)
#graficar la señal
    imga.plot(n*T, xa2)
    imga.plot(n*T, xa2,'r*')
    canvas=FigureCanvasTkAgg(g1,ventana)
    canvas.draw()
    #canvas.get_tk_widget().pack(side=tk.LEFT,padx=1,pady=1,ipadx=5,ipady=5)
    canvas.get_tk_widget().place(x=800, y=400)




    
ventana=Tk()

amplitud=tk.StringVar()
frecuencia=tk.StringVar()
fase=tk.StringVar()
ob=tk.StringVar()
mcm=tk.StringVar()
#muestra=tk.StringVar()
funcion=tk.StringVar()


ventana.geometry('1400x750')
ventana.title("Proyecto 1B-Procesamiento Digital de Señales")
ventana.configure(bg="green")
#limitar el espaio de la interfaz
ventana.resizable(0,0)# evita que se redimensione la ventana si los dos parametros estan en false
ventana.iconbitmap("utn.ico")
ventana.config(bg="cyan")


L1=Label(ventana, text="Generador de señales continuas con su muestreo",bg="cyan",font=("Helvetica",16,'bold'),fg="red").place(x=350, y=10)
L2=Label(ventana, text="PROYECTO",bg="cyan", font=("Arial",16,'bold'),fg="blue").place(x=500, y=50)


L3=Label(ventana, text="AMPLITUD",font=("Arial",14),bg="cyan", fg="black").place(x=100, y=100)
Amp=tk.Entry(ventana, textvariable=amplitud).place(x=210, y=105)

L10=Label(ventana, text="AMPLITUD 2",font=("Arial",14),bg="cyan", fg="black").place(x=100, y=200)
amp2=tk.StringVar()
Amplitud2=tk.Entry(ventana, textvariable=amp2).place(x=220, y=205)


L4=Label(ventana, text="FRECUENCIA",font=("Arial",14),bg="cyan", fg="black").place(x=400, y=100)
Frec=tk.Entry(ventana, textvariable=frecuencia).place(x=550, y=105)

L11=Label(ventana, text="FRECUENCIA 2",font=("Arial",14),bg="cyan", fg="black").place(x=400, y=200)
frec2=tk.StringVar()
frecuencia2=tk.Entry(ventana, textvariable=frec2).place(x=550, y=205)

L12=tk.Label(ventana, text="Frecuencia de Muestreo:", font=("Arial",14), bg="cyan", fg="black").place(x=850, y=275)
fs=tk.StringVar()
fmuestreo=tk.Entry(ventana, textvariable=fs).place(x=1075, y=280)

L5=Label(ventana, text="FASE", font=("Arial",14),bg="cyan",fg=("black")).place(x=750, y=100)
fas=tk.Entry(ventana, textvariable=fase).place(x=825, y=105)

L5=Label(ventana, text="FASE 2", font=("Arial",14),bg="cyan",fg=("black")).place(x=750, y=200)
fase2=tk.StringVar()
fas=tk.Entry(ventana, textvariable=fase2).place(x=825, y=205)


L6=Label(ventana, text="Señal Generada",font=("Arial",14),bg="cyan",fg="black").place(x=125,y=350)

L7=Label(ventana, text="Señal muestreada",font=("Arial",14),bg="cyan",fg="black").place(x=1050, y=350)

L8=Label(ventana, text="Función Generada: ",font=("Arial",14),bg="cyan",fg="Black").place(x=50,y=275)

L9=Label(ventana, textvariable=funcion,bg='cyan',font=('Arial',14)).place(x=250,y=275)


btn_graficar= tk.Button(ventana, text="GRAFICAR",bg="blue",fg="white",relief="ridge",width=15,height=4, command=Generar).place(x=500, y=275)
btn_com= tk.Button(ventana, text="FUNCION COMPLEJA",bg="blue",fg="white",relief="ridge",width=15,height=4, command=compleja).place(x=700, y=275)


ventana.mainloop()


